17 爬取百度首页标题
-------------------

.. code:: python

   import re
   from urllib import request

   #爬虫爬取百度首页内容
   data=request.urlopen("http://www.baidu.com/").read().decode()

   #分析网页,确定正则表达式
   pat=r'<title>(.*?)</title>'

   result=re.search(pat,data)
   print(result) <re.Match object; span=(1358, 1382), match='<title>百度一下，你就知道</title>'>

   result.group() # 百度一下，你就知道

.. _header-n1894:

18 批量转化为驼峰格式(Camel)
----------------------------

数据库字段名批量转化为驼峰格式

分析过程

.. code:: python

   # 用到的正则串讲解
   # \s 指匹配： [ \t\n\r\f\v]
   # A|B：表示匹配A串或B串
   # re.sub(pattern, newchar, string): 
   # substitue代替，用newchar字符替代与pattern匹配的字符所有.

.. code:: python

   # title(): 转化为大写，例子：
   # 'Hello world'.title() # 'Hello World'

.. code:: python

   # print(re.sub(r"\s|_|", "", "He llo_worl\td"))
   s = re.sub(r"(\s|_|-)+", " ",
              'some_database_field_name').title().replace(" ", "")  
   #结果： SomeDatabaseFieldName

.. code:: python

   # 可以看到此时的第一个字符为大写，需要转化为小写
   s = s[0].lower()+s[1:]  # 最终结果

整理以上分析得到如下代码：

.. code:: python

   import re
   def camel(s):
       s = re.sub(r"(\s|_|-)+", " ", s).title().replace(" ", "")
       return s[0].lower() + s[1:]

   # 批量转化
   def batch_camel(slist):
       return [camel(s) for s in slist]

测试结果：

.. code:: python

   s = batch_camel(['student_id', 'student\tname', 'student-add'])
   print(s)
   # 结果
   ['studentId', 'studentName', 'studentAdd']

.. _header-n1910: